# budget_optimization.BudgetOptimizer { #prophetverse.budget_optimization.BudgetOptimizer }

```python
budget_optimization.BudgetOptimizer(
    self,
    objective,
    constraints,
    parametrization_transform=None,
    method='SLSQP',
    tol=None,
    bounds=None,
    options=None,
    callback=None,
)
```

Budget optimizer using scipy.optimize.minimize.

## Parameters {.doc-section .doc-section-parameters}

| Name                        | Type                                       | Description                                                                                                                                                                                                                      | Default    |
|-----------------------------|--------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| objective                   | BaseOptimizationObjective                  | Objective function object                                                                                                                                                                                                        | _required_ |
| constraints                 | list of BaseConstraint                     | List of constraint objects                                                                                                                                                                                                       | _required_ |
| decision_variable_transform | BaseDecisionVariableTransform              | Decision variable transform object                                                                                                                                                                                               | _required_ |
| method                      | str                                        | Optimization method to use. Default is "SLSQP".                                                                                                                                                                                  | `'SLSQP'`  |
| tol                         | float                                      | Tolerance for termination. Default is None.                                                                                                                                                                                      | `None`     |
| bounds                      | Union\[List\[tuple\], dict\[str, tuple\]\] | Bounds for decision variables. If a list, the value is used directly in scipy.optimize.minimize. If a dict, the keys are the column names and the values are the bounds for each column. Default is (0, np.inf) for each column. | `None`     |
| options                     | dict                                       | Options for the optimization method. Default is None.                                                                                                                                                                            | `None`     |
| callback                    | callable                                   | Callback function to be called after each iteration. Default is None.                                                                                                                                                            | `None`     |

## Methods

| Name | Description |
| --- | --- |
| [wrap_func_with_inv_transform](#prophetverse.budget_optimization.BudgetOptimizer.wrap_func_with_inv_transform) | Wrap a function with parametrization inverse transform |

### wrap_func_with_inv_transform { #prophetverse.budget_optimization.BudgetOptimizer.wrap_func_with_inv_transform }

```python
budget_optimization.BudgetOptimizer.wrap_func_with_inv_transform(
    fun,
)
```

Wrap a function with parametrization inverse transform