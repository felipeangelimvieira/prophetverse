[tool.poetry]
name = "prophetverse"
version = "0.3.2"
description = ""
authors = ["Felipe Angelim <felipeangelim@gmail.com>"]
readme = "README.md"
packages = [{ include = "prophetverse", from="src"}]

[tool.poetry.dependencies]
python = ">=3.9, <3.13"
sktime = ">=0.30.0"
numpyro = ">=0.13.2"
optax = ">=0.2"
graphviz = "^0.20.3"


ipykernel = { version = ">=6.26.0,<7.0.0", optional = true }
pytest = { version = ">=8.0.0,<9.0.0", optional = true }
sphinx = { version = ">=7.2.6,<8.0.0", optional = true }
matplotlib = { version = ">=3.8.2,<4.0.0", optional = true }
mkdocs = { version = ">=1.5.3,<2.0.0", optional = true }
mkdocstrings-python = { version = ">=1.9.0,<2.0.0", optional = true }
mkdocs-jupyter = { version = ">=0.24.6,<0.25.0", optional = true }
pymdown-extensions = { version = ">=10.7.1,<11.0.0", optional = true }
mkdocs-material = { version = ">=9.5.14,<10.0.0", optional = true }
pytest-cov = { version = ">=5.0.0,<6.0.0", optional = true }
pre-commit = { version = ">=3.7.1,<4.0.0", optional = true }
commitlint = { version = ">=1.0.0,<2.0.0", optional = true }
isort = { version = ">=5.13.2,<6.0.0", optional = true }
black = { version = ">=24.4.2,<25.0.0", optional = true }
pydocstyle = { version = ">=6.3.0,<7.0.0", optional = true }
mypy = { version = ">=1.10.0,<2.0.0", optional = true }
pylint = { version = ">=3.2.2,<4.0.0", optional = true }
mkdocstrings = { version = "^0.25.1", optional = true }
deprecated = "^1.2.14"
types-deprecated = "^1.2.9.20240311"

[tool.poetry.extras]
dev = [
    "ipykernel",
    "pytest",
    "sphinx",
    "matplotlib",
    "mkdocs",
    "mkdocstrings-python",
    "mkdocs-jupyter",
    "pymdown-extensions",
    "mkdocs-material",
    "pytest-cov",
    "pre-commit",
    "commitlint",
    "isort",
    "black",
    "pydocstyle",
    "mypy",
    "pylint",
    "mkdocstrings"
]

[tool.pytest.ini_options]
markers = [
    "ci: marks tests for Continuous Integration",
    "smoke: marks tests for smoke testing",
    ]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pre-commit]
